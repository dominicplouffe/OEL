"""
Django settings for oel project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path
from corsheaders.defaults import default_headers
from oel.celery import app

_ = app


def get_env_variable(var_name, default=None):
    try:
        return os.environ[var_name]
    except KeyError:
        if default is not None:
            return default
        error_msg = "Set the %s environment variable" % var_name
        raise ImproperlyConfigured(error_msg)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = '/opt/static'

ENV = get_env_variable('FC_ENV', 'dev')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&a^3x)^55jcxa(j&pt)n1=p8)7qk@b5452u8#*u1_t-n@jd=j_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ENV != 'prod'

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_celery_beat',
    'api.apps.ApiConfig',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    "api.middleware.org.org_middleware"
]

ROOT_URLCONF = 'oel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'oel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_env_variable('OEL_DB_NAME', ''),
        'USER': get_env_variable('OEL_USERNAME', ''),
        'PASSWORD': get_env_variable('OEL_PASSWORD', ''),
        'HOST': get_env_variable('OEL_HOSTNAME', ''),
        'PORT': get_env_variable('OEL_PORT', ''),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': 'sqlite3.db',
#         'USER': '',
#         'PASSWORD': '',
#         'HOST': '',
#         'PORT': '',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'PAGE_SIZE': 100,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ],
    'DEFAULT_PERMISSION_CLASSES': tuple(),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
}

# Django CORS and CSRF
# https://github.com/OttoYiu/django-cors-headers
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = list(default_headers) + [
    'WWW-AUTHORIZATION',
    'HTTP_WWW_AUTHORIZATION',
    'X-Fancontent-User',
    'Authorization'
]

CORS_EXPOSE_HEADERS = [
    'Content-Disposition'
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, 'oelui', "build", "static"),
    # BASE_DIR / "build/static"
]

BROKER_URL = os.environ.get('BROKER_URL', 'redis://localhost:6379')
CELERY_RESULT_BACKEND = os.environ.get(
    'CELERY_RESULT_BACKEND', 'redis://localhost:6379')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_CREATE_MISSING_QUEUES = True

EMAIL_HOST_USER = 'AKIA6GTKOUSDT2IWOFHI'
EMAIL_HOST_PASSWORD = 'BB5jdbMbF2FKfn7/+Y7cY3dbvpLPa7nR2Ve8gY1moL1e'
EMAIL_HOST = 'email-smtp.us-east-1.amazonaws.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = '"OnErrorLog" <dominic@dplouffe.ca>'
REDIS_HOST = BROKER_URL.split('/')[-1].split(':')[0]


# Application Settings
ALLOW_GENERIC_EMAILS = os.environ.get('ALLOW_GENERIC_EMAILS', False)

SECS_BETWEEN_PONGS = 10
PONG_DATA_MAX_LEN = 16384

TWILIO_SID = 'ACa68369fba14607cd774202b6f66cdd3e'
TWILIO_AUTH_TOKEN = '2a89a2de2621ae8c9eab63d84df97e8d'
TWILIO_PHONE = '+13437002903'

PAYPAL_API = get_env_variable('PAYPAL_API', 'https://api.sandbox.paypal.com')
PAYPAL_CLIENT_ID = get_env_variable(
    'PAYPAL_CLIENT_ID', 'AaxRY3kRS9ouuVyaVGz-gmya7zCQnqTO4fVDkFPFLNQU77vwkdevkKX-R0JfMu-3nQTMete9cflK2kY6')
PAYPAL_CLIENT_SECRET = get_env_variable(
    'PAYPAL_CLIENT_SECRET', 'EHwf0fCA1V4Cuq7EyYSptozxmp-tB9qhx5ZCiWj7IpgWiPGfDbBTgp54zUbjU16e1bq77GBBlqvzrwOa')
